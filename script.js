// Formspree endpoints - –†–ê–ó–ù–´–ï –î–õ–Ø –ö–ê–ñ–î–û–ô –§–û–†–ú–´!
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
const TELEGRAM_USERNAME = 'Tan4ik77G';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
function isMobileDevice() {
    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
async function copyToClipboard(text) {
    try {
        if (navigator.clipboard && window.isSecureContext) {
            await navigator.clipboard.writeText(text);
            return true;
        } else {
            // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
            const textArea = document.createElement('textarea');
            textArea.value = text;
            textArea.style.position = 'fixed';
            textArea.style.left = '-999999px';
            textArea.style.top = '-999999px';
            document.body.appendChild(textArea);
            textArea.focus();
            textArea.select();
            
            const success = document.execCommand('copy');
            textArea.remove();
            return success;
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
        return false;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Telegram
function openTelegram() {
    // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram
    window.location.href = `tg://resolve?domain=${TELEGRAM_USERNAME}`;
    
    // Fallback: —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤–µ–±-–≤–µ—Ä—Å–∏—é, –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–∫—Ä—ã–ª–æ—Å—å
    setTimeout(() => {
        window.open(`https://t.me/${TELEGRAM_USERNAME}`, '_blank');
    }, 2000);
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
document.addEventListener('DOMContentLoaded', function() {
    console.log('–°–∞–π—Ç –∑–∞–≥—Ä—É–∂–µ–Ω');

    // Mobile menu toggle
    const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
    const navLinks = document.querySelector('.nav-links');
    
    if (mobileMenuBtn && navLinks) {
        mobileMenuBtn.addEventListener('click', function() {
            navLinks.classList.toggle('active');
        });
    }

    // Smooth scrolling for navigation links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            if (navLinks) navLinks.classList.remove('active');
            
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });

    // –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –ø–æ–ª—è –¥–ª—è —Å–µ–∑–æ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
    const seasonalRadio = document.querySelectorAll('input[name="seasonal_dependency"]');
    const seasonalDescription = document.getElementById('seasonalDescription');
    
    if (seasonalRadio.length > 0 && seasonalDescription) {
        seasonalRadio.forEach(radio => {
            radio.addEventListener('change', function() {
                seasonalDescription.style.display = this.value === 'yes' ? 'block' : 'none';
            });
        });
    }

    // –§–æ—Ä–º–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
    const bookingForm = document.getElementById('bookingForm');
    if (bookingForm) {
        bookingForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            const name = this.querySelector('[name="name"]').value;
            const contact = this.querySelector('[name="contact"]').value;
            const email = this.querySelector('[name="email"]').value;
            const service = this.querySelector('[name="service"]').value;
            const message = this.querySelector('[name="message"]').value;
            
            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            const messageText = `üéØ –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ö–û–ù–°–£–õ–¨–¢–ê–¶–ò–Æ

üë§ –ò–º—è: ${name}
üìû –ö–æ–Ω—Ç–∞–∫—Ç: ${contact}
üìß Email: ${email || '–ù–µ —É–∫–∞–∑–∞–Ω'}
üé≠ –§–æ—Ä–º–∞—Ç: ${service}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${message || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

‚è∞ ${new Date().toLocaleString('ru-RU')}`;

            // URL-encoded –≤–µ—Ä—Å–∏—è –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–æ–≤
            const encodedMessage = encodeURIComponent(messageText.replace(/\n/g, '%0A'));
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û—Ç–ø—Ä–∞–≤–∫–∞...';
            submitBtn.disabled = true;
            
            try {
                if (isMobileDevice()) {
                    // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
                    const copySuccess = await copyToClipboard(messageText);
                    
                    if (copySuccess) {
                        alert('‚úÖ –¢–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!\n\n–¢–µ–ø–µ—Ä—å:\n1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram\n2. –ù–∞–ø–∏—à–∏—Ç–µ @Tan4ik77G\n3. –í—Å—Ç–∞–≤—å—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç\n4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
                        openTelegram();
                    } else {
                        alert('üìã –ó–∞—è–≤–∫–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏!\n\n–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç:\n\n' + messageText + '\n\n–ó–∞—Ç–µ–º:\n1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram\n2. –ù–∞–ø–∏—à–∏—Ç–µ @Tan4ik77G\n3. –í—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç\n4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
                        openTelegram();
                    }
                } else {
                    // –î–ª—è –¥–µ—Å–∫—Ç–æ–ø–æ–≤
                    window.open(`https://t.me/${TELEGRAM_USERNAME}?text=${encodedMessage}`, '_blank');
                    alert('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –Ø —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.');
                }
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
                this.reset();
                
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞:', error);
                alert('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π –Ω–∞–ø—Ä—è–º—É—é:\nüìû +7 (905) 595-99-96\n‚úâÔ∏è @Tan4ik77G');
            } finally {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
            }
        });
    }

    // –§–æ—Ä–º–∞ —Ç–µ—Å—Ç–∞
    const testForm = document.getElementById('libidoTestForm');
    if (testForm) {
        testForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;
            
            // –°–æ–±–∏—Ä–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ—Å—Ç–∞
            const generalFrequency = this.querySelector('[name="general_frequency"]:checked')?.value || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
            const desireStrength = this.querySelector('[name="desire_strength"]:checked')?.value || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
            const arousalPenis = this.querySelector('[name="arousal_penis"]:checked')?.value || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
            const seasonal = this.querySelector('[name="seasonal_dependency"]:checked')?.value || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
            
            const messageText = `üìä –ù–û–í–ê–Ø –ê–ù–ö–ï–¢–ê –õ–ò–ë–ò–î–û

üìà –û–±—â–∞—è —á–∞—Å—Ç–æ—Ç–∞: ${generalFrequency}
üí™ –°–∏–ª–∞ –∂–µ–ª–∞–Ω–∏—è: ${desireStrength}
üî• –í–æ–∑–±—É–∂–¥–µ–Ω–∏–µ –æ—Ç –≤–∏–¥–∞: ${arousalPenis}
üå¶Ô∏è –°–µ–∑–æ–Ω–Ω–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: ${seasonal}

‚è∞ ${new Date().toLocaleString('ru-RU')}

–ü–æ–ª–Ω–∞—è –∞–Ω–∫–µ—Ç–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ`;

            // URL-encoded –≤–µ—Ä—Å–∏—è –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–æ–≤
            const encodedMessage = encodeURIComponent(messageText.replace(/\n/g, '%0A'));
            
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–∫–µ—Ç—ã...';
            submitBtn.disabled = true;
            
            try {
                if (isMobileDevice()) {
                    // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
                    const copySuccess = await copyToClipboard(messageText);
                    
                    if (copySuccess) {
                        alert('‚úÖ –¢–µ–∫—Å—Ç –∞–Ω–∫–µ—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!\n\n–¢–µ–ø–µ—Ä—å:\n1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram\n2. –ù–∞–ø–∏—à–∏—Ç–µ @Tan4ik77G\n3. –í—Å—Ç–∞–≤—å—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç\n4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
                        openTelegram();
                    } else {
                        alert('üìã –ê–Ω–∫–µ—Ç–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏!\n\n–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç:\n\n' + messageText + '\n\n–ó–∞—Ç–µ–º:\n1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram\n2. –ù–∞–ø–∏—à–∏—Ç–µ @Tan4ik77G\n3. –í—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç\n4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
                        openTelegram();
                    }
                } else {
                    // –î–ª—è –¥–µ—Å–∫—Ç–æ–ø–æ–≤
                    window.open(`https://t.me/${TELEGRAM_USERNAME}?text=${encodedMessage}`, '_blank');
                    alert('‚úÖ –ê–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã.');
                }
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
                this.reset();
                
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞:', error);
                alert('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∫–µ—Ç—ã.');
            } finally {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
            }
        });
    }

    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω—ã—Ö –∏ –¥–µ—Å–∫—Ç–æ–ø–Ω—ã—Ö –ø–æ–ª–µ–π
    document.addEventListener('change', function(e) {
        if (e.target.name && e.target.name.includes('_mobile')) {
            const mainFieldName = e.target.name.replace('_mobile', '');
            const mainField = document.querySelector(`[name="${mainFieldName}"]`);
            if (mainField) {
                mainField.value = e.target.value;
            }
        }
        
        if (e.target.name && !e.target.name.includes('_mobile')) {
            const mobileFieldName = e.target.name + '_mobile';
            const mobileField = document.querySelector(`[name="${mobileFieldName}"]`);
            if (mobileField) {
                mobileField.value = e.target.value;
            }
        }
    });

    // –ê–¥–∞–ø—Ç–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    function adaptTablesForMobile() {
        if (window.innerWidth <= 768) {
            const tables = document.querySelectorAll('.period-table');
            const mobileCards = document.querySelectorAll('.mobile-period-card');
            
            tables.forEach(table => {
                table.style.display = 'none';
            });
            mobileCards.forEach(card => {
                card.style.display = 'block';
            });
        } else {
            const tables = document.querySelectorAll('.period-table');
            const mobileCards = document.querySelectorAll('.mobile-period-card');
            
            tables.forEach(table => {
                table.style.display = 'table';
            });
            mobileCards.forEach(card => {
                card.style.display = 'none';
            });
        }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('load', adaptTablesForMobile);
    window.addEventListener('resize', adaptTablesForMobile);

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–∞–≤–µ–¥–µ–Ω–∏—è –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    document.querySelectorAll('.btn, .service-card, .step, .contact-item, .option-item').forEach(element => {
        element.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-2px)';
            this.style.transition = 'transform 0.2s ease';
        });
        
        element.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0)';
        });
    });

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);

    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –≤—Å–µ–º–∏ —Å–µ–∫—Ü–∏—è–º–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    document.querySelectorAll('section').forEach(section => {
        section.style.opacity = '0';
        section.style.transform = 'translateY(20px)';
        section.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(section);
    });
});
