// Formspree endpoints
const FORMSPREE_BOOKING = 'https://formspree.io/f/xrbykqya'; // –¥–ª—è –∑–∞–ø–∏—Å–∏
const FORMSPREE_TEST = 'https://formspree.io/f/xpwyrdyp'; // –¥–ª—è —Ç–µ—Å—Ç–∞

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
document.addEventListener('DOMContentLoaded', function() {
    console.log('–°–∞–π—Ç –∑–∞–≥—Ä—É–∂–µ–Ω');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ–π–¥–µ–Ω –ª–∏ —Ç–µ—Å—Ç
    checkTestCompletion();

    // Mobile menu toggle
    const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
    const navLinks = document.querySelector('.nav-links');
    
    if (mobileMenuBtn && navLinks) {
        mobileMenuBtn.addEventListener('click', function() {
            navLinks.classList.toggle('active');
        });
    }

    // Smooth scrolling for navigation links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            if (navLinks) navLinks.classList.remove('active');
            
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });

    // –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –ø–æ–ª—è –¥–ª—è —Å–µ–∑–æ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
    const seasonalRadio = document.querySelectorAll('input[name="question_5"]');
    const seasonalDescription = document.getElementById('seasonalDescription');
    
    if (seasonalRadio.length > 0 && seasonalDescription) {
        seasonalRadio.forEach(radio => {
            radio.addEventListener('change', function() {
                const shouldShow = this.value === '–î–∞';
                seasonalDescription.style.display = shouldShow ? 'block' : 'none';
                
                // –î–µ–ª–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ "–î–∞"
                const textarea = seasonalDescription.querySelector('textarea');
                if (textarea) {
                    textarea.required = shouldShow;
                }
            });
        });
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    setupFormValidation();

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á–∏—Ç–∞–µ–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞
    function createTestSummary(form) {
        const timestamp = new Date().toLocaleString('ru-RU');
        let summary = `üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ê –õ–ò–ë–ò–î–û\n`;
        summary += `üìÖ –î–∞—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è: ${timestamp}\n`;
        summary += `========================================\n\n`;
        
        // –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const name = form.querySelector('#clientName')?.value || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
        const contact = form.querySelector('#clientContact')?.value || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
        
        if (name !== '–ù–µ —É–∫–∞–∑–∞–Ω–æ' || contact !== '–ù–µ —É–∫–∞–∑–∞–Ω–æ') {
            summary += `üë§ –ö–û–ù–¢–ê–ö–¢–ù–´–ï –î–ê–ù–ù–´–ï:\n`;
            summary += `–ò–º—è: ${name}\n`;
            summary += `–ö–æ–Ω—Ç–∞–∫—Ç—ã: ${contact}\n\n`;
            summary += `========================================\n\n`;
        }
        
        // –°–æ–±–∏—Ä–∞–µ–º –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
        summary += `üìä –û–¢–í–ï–¢–´ –ù–ê –í–û–ü–†–û–°–´:\n\n`;
        
        // –í–æ–ø—Ä–æ—Å 1
        const q1 = form.querySelector('input[name="question_1"]:checked');
        if (q1) {
            summary += `1. –ö–∞–∫ —á–∞—Å—Ç–æ –≤ —Ü–µ–ª–æ–º —Ö–æ—á–µ—Ç—Å—è —Å–µ–∫—Å–∞?\n`;
            summary += `   ‚úÖ ${q1.value}\n\n`;
        }
        
        // –í–æ–ø—Ä–æ—Å 2
        const q2 = form.querySelector('input[name="question_2"]:checked');
        if (q2) {
            summary += `2. –°–∏–ª–∞ –∂–µ–ª–∞–Ω–∏—è –≤ —Ç–µ –¥–Ω–∏, –∫–æ–≥–¥–∞ —Ö–æ—á–µ—Ç—Å—è —Å–µ–∫—Å–∞?\n`;
            summary += `   ‚úÖ ${q2.value}\n\n`;
        }
        
        // –í–æ–ø—Ä–æ—Å 3
        const q3 = form.querySelector('input[name="question_3"]:checked');
        if (q3) {
            summary += `3. –í–æ–∑–±—É–∂–¥–∞–µ—Ç –ª–∏ –≤–∏–¥ —ç—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª–æ–≤–æ–≥–æ —á–ª–µ–Ω–∞?\n`;
            summary += `   ‚úÖ ${q3.value}\n\n`;
        }
        
        // –ü–µ—Ä–∏–æ–¥ 1 –≤–æ–ø—Ä–æ—Å—ã
        const q4a = form.querySelector('select[name="question_4a"]')?.value || 
                    form.querySelector('select[name="question_4a_mobile"]')?.value;
        if (q4a && q4a !== '') {
            summary += `4. –ü–µ—Ä–∏–æ–¥ 1 - –ë–µ–∑ –∂–µ–ª–∞–Ω–∏—è - –ß–∞—Å—Ç–æ—Ç–∞:\n`;
            summary += `   ‚úÖ ${q4a}\n\n`;
        }
        
        const q4b = form.querySelector('select[name="question_4b"]')?.value || 
                    form.querySelector('select[name="question_4b_mobile"]')?.value;
        if (q4b && q4b !== '') {
            summary += `5. –ü–µ—Ä–∏–æ–¥ 1 - –° –∂–µ–ª–∞–Ω–∏–µ–º - –°–∏–ª–∞:\n`;
            summary += `   ‚úÖ ${q4b}\n\n`;
        }
        
        const q4c = form.querySelector('select[name="question_4c"]')?.value || 
                    form.querySelector('select[name="question_4c_mobile"]')?.value;
        if (q4c && q4c !== '') {
            summary += `6. –ü–µ—Ä–∏–æ–¥ 1 - –ë–µ–∑ –∂–µ–ª–∞–Ω–∏—è - –í–æ–∑–±—É–∂–¥–µ–Ω–∏–µ:\n`;
            summary += `   ‚úÖ ${q4c}\n\n`;
        }
        
        const q4d = form.querySelector('select[name="question_4d"]')?.value || 
                    form.querySelector('select[name="question_4d_mobile"]')?.value;
        if (q4d && q4d !== '') {
            summary += `7. –ü–µ—Ä–∏–æ–¥ 1 - –° –∂–µ–ª–∞–Ω–∏–µ–º - –í–æ–∑–±—É–∂–¥–µ–Ω–∏–µ:\n`;
            summary += `   ‚úÖ ${q4d}\n\n`;
        }
        
        // –°–µ–∑–æ–Ω–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
        const q5 = form.querySelector('input[name="question_5"]:checked');
        if (q5) {
            summary += `8. –°–µ–∑–æ–Ω–Ω–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å:\n`;
            summary += `   ‚úÖ ${q5.value}\n\n`;
        }
        
        const q6 = form.querySelector('textarea[name="question_6"]')?.value;
        if (q6 && q6.trim() !== '') {
            summary += `9. –°–µ–∑–æ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:\n`;
            summary += `   üìù ${q6}\n\n`;
        }
        
        summary += `========================================\n`;
        summary += `üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:\n`;
        summary += `–¢–µ—Å—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è.\n`;
        
        return summary;
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    async function submitForm(form, endpoint, successMessage, isTest = false) {
        const submitBtn = form.querySelector('button[type="submit"]');
        const originalText = submitBtn.innerHTML;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º—ã
        if (!form.checkValidity()) {
            showFormErrors(form);
            return;
        }
        
        // –î–ª—è —Ç–µ—Å—Ç–∞ —Å–æ–∑–¥–∞–µ–º —á–∏—Ç–∞–µ–º–æ–µ —Ä–µ–∑—é–º–µ
        if (isTest) {
            const summary = createTestSummary(form);
            const summaryField = document.getElementById('readableResults');
            if (summaryField) {
                summaryField.value = summary;
            }
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û—Ç–ø—Ä–∞–≤–∫–∞...';
        submitBtn.disabled = true;
        
        try {
            // –°–æ–∑–¥–∞–µ–º FormData –∏–∑ —Ñ–æ—Ä–º—ã
            const formData = new FormData(form);
            
            console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞:', endpoint);
            
            const response = await fetch(endpoint, {
                method: 'POST',
                body: formData,
                headers: {
                    'Accept': 'application/json'
                }
            });
            
            console.log('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
            console.log('–û—Ç–≤–µ—Ç OK:', response.ok);
            
            if (response.ok) {
                // –£—Å–ø–µ—à–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
                alert(successMessage);
                
                // –ï—Å–ª–∏ —ç—Ç–æ —Ç–µ—Å—Ç, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–∫—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è
                if (isTest) {
                    localStorage.setItem('testCompleted', 'true');
                    showTestCompletionMessage();
                    checkTestCompletion();
                }
                
                form.reset();
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ–∑–æ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
                if (seasonalDescription) {
                    seasonalDescription.style.display = 'none';
                }
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∏ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏
                seasonalRadio.forEach(radio => {
                    radio.checked = false;
                });
                
            } else {
                // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                const errorText = await response.text();
                console.error('–û—à–∏–±–∫–∞ Formspree:', errorText);
                throw new Error(`Formspree error: ${response.status} ${response.statusText}`);
            }
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
            alert('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ: +7 (905) 595-99-96');
        } finally {
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
        }
    }

    // –§–æ—Ä–º–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
    const bookingForm = document.getElementById('bookingForm');
    if (bookingForm) {
        bookingForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ–π–¥–µ–Ω –ª–∏ —Ç–µ—Å—Ç
            if (localStorage.getItem('testCompleted') !== 'true') {
                const testRequiredMessage = document.getElementById('testRequiredMessage');
                if (testRequiredMessage) {
                    testRequiredMessage.style.display = 'block';
                    testRequiredMessage.scrollIntoView({ 
                        behavior: 'smooth', 
                        block: 'center' 
                    });
                }
                return;
            }
            
            submitForm(
                this, 
                FORMSPREE_BOOKING, 
                '‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –Ø —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.',
                false
            );
        });
    }

    // –§–æ—Ä–º–∞ —Ç–µ—Å—Ç–∞
    const testForm = document.getElementById('libidoTestForm');
    if (testForm) {
        testForm.addEventListener('submit', function(e) {
            e.preventDefault();
            submitForm(
                this, 
                FORMSPREE_TEST, 
                '‚úÖ –ê–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã. –Ø —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.',
                true
            );
        });
    }

    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω—ã—Ö –∏ –¥–µ—Å–∫—Ç–æ–ø–Ω—ã—Ö –ø–æ–ª–µ–π
    document.addEventListener('change', function(e) {
        if (e.target.name && e.target.name.includes('_mobile')) {
            const mainFieldName = e.target.name.replace('_mobile', '');
            const mainField = document.querySelector(`[name="${mainFieldName}"]`);
            if (mainField) {
                mainField.value = e.target.value;
            }
        }
        
        if (e.target.name && !e.target.name.includes('_mobile')) {
            const mobileFieldName = e.target.name + '_mobile';
            const mobileField = document.querySelector(`[name="${mobileFieldName}"]`);
            if (mobileField) {
                mobileField.value = e.target.value;
            }
        }
    });

    // –ê–¥–∞–ø—Ç–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    function adaptTablesForMobile() {
        if (window.innerWidth <= 768) {
            const tables = document.querySelectorAll('.period-table');
            const mobileCards = document.querySelectorAll('.mobile-period-card');
            
            tables.forEach(table => {
                table.style.display = 'none';
            });
            mobileCards.forEach(card => {
                card.style.display = 'block';
            });
        } else {
            const tables = document.querySelectorAll('.period-table');
            const mobileCards = document.querySelectorAll('.mobile-period-card');
            
            tables.forEach(table => {
                table.style.display = 'table';
            });
            mobileCards.forEach(card => {
                card.style.display = 'none';
            });
        }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('load', adaptTablesForMobile);
    window.addEventListener('resize', adaptTablesForMobile);

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);

    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –≤—Å–µ–º–∏ —Å–µ–∫—Ü–∏—è–º–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    document.querySelectorAll('section').forEach(section => {
        section.style.opacity = '0';
        section.style.transform = 'translateY(20px)';
        section.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(section);
    });

    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
    function checkTestCompletion() {
        const testCompleted = localStorage.getItem('testCompleted') === 'true';
        const testRequiredMessage = document.getElementById('testRequiredMessage');
        const bookingSubmitBtn = document.getElementById('bookingSubmitBtn');
        
        if (testRequiredMessage) {
            testRequiredMessage.style.display = testCompleted ? 'none' : 'block';
        }
        
        if (bookingSubmitBtn) {
            bookingSubmitBtn.disabled = !testCompleted;
            if (!testCompleted) {
                bookingSubmitBtn.title = '–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ç–µ—Å—Ç –ª–∏–±–∏–¥–æ';
            } else {
                bookingSubmitBtn.title = '';
            }
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞
    function showTestCompletionMessage() {
        const message = document.getElementById('testCompletionMessage');
        if (message) {
            message.style.display = 'block';
            message.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º
    function setupFormValidation() {
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
        document.querySelectorAll('input, select, textarea').forEach(field => {
            field.addEventListener('input', function() {
                clearFieldError(this);
            });
            
            field.addEventListener('change', function() {
                clearFieldError(this);
            });
            
            // –î–ª—è —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–æ–∫ –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –≤—Å—é –≥—Ä—É–ø–ø—É
            if (field.type === 'radio') {
                const radioGroup = document.querySelectorAll(`input[name="${field.name}"]`);
                radioGroup.forEach(radio => {
                    radio.addEventListener('change', function() {
                        radioGroup.forEach(r => clearFieldError(r));
                    });
                });
            }
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –æ—à–∏–±–∫–∏ –ø–æ–ª—è
    function clearFieldError(field) {
        field.classList.remove('error');
        const errorMessage = field.parentNode.querySelector('.error-message');
        if (errorMessage) {
            errorMessage.style.display = 'none';
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–æ–∫ —Ñ–æ—Ä–º—ã
    function showFormErrors(form) {
        let firstError = null;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        form.querySelectorAll('[required]').forEach(field => {
            const isRadio = field.type === 'radio';
            const radioGroup = isRadio ? form.querySelectorAll(`input[name="${field.name}"]`) : null;
            const isRadioChecked = isRadio ? Array.from(radioGroup).some(radio => radio.checked) : false;
            
            if (!field.value && !isRadioChecked) {
                field.classList.add('error');
                let errorMessage;
                
                if (isRadio) {
                    // –î–ª—è —Ä–∞–¥–∏–æ–≥—Ä—É–ø–ø—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É —É –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
                    errorMessage = radioGroup[0].parentNode.parentNode.querySelector('.error-message');
                } else {
                    errorMessage = field.parentNode.querySelector('.error-message');
                }
                
                if (errorMessage) {
                    errorMessage.style.display = 'block';
                }
                
                // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –ø–µ—Ä–≤–æ–µ –ø–æ–ª–µ —Å –æ—à–∏–±–∫–æ–π –¥–ª—è —Å–∫—Ä–æ–ª–ª–∞
                if (!firstError) {
                    firstError = isRadio ? radioGroup[0] : field;
                }
            }
        });
        
        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –ø–µ—Ä–≤–æ–π –æ—à–∏–±–∫–µ
        if (firstError) {
            firstError.scrollIntoView({ 
                behavior: 'smooth', 
                block: 'center' 
            });
            firstError.focus();
        }
    }
});
